function main() {

  var SHEET_NAME_DETAIL = 'shousai'
  let sheet_detail = SpreadsheetApp.openById(SHEET_ID).getSheetByName(SHEET_NAME_DETAIL);
  var SHEET_NAME_MAYBE = 'maybe'
  var sheet_data = SpreadsheetApp.openById(SHEET_ID).getSheetByName(SHEET_NAME_MAYBE);

  //最終行を取得
  lastdata = sheet_data.getLastRow();
  lastdataUser = sheet_data.getRange(lastdata, 2).getValue();

  agesnum = sheet_data.getRange(lastdata - 2, 4).getValue();
  numbersnum = sheet_data.getRange(lastdata - 1, 4).getValue();
  colorsnum = sheet_data.getRange(lastdata, 4).getValue();


  placekanko = myFunction(agesnum, numbersnum, colorsnum)

  jikko(placekanko)



}

function jikko(placekanko) {


  let kankochi = [
    {
      "type": "template",
      "altText": "this is a carousel template",
      "template": {
        "type": "carousel",
        "columns": [
          {
            "thumbnailImageUrl": "https://scdn.line-apps.com/n/channel_devcenter/img/fx/01_1_cafe.png",
            "title": "観光地1",
            "text": "こんなスポットは〇〇で，〇〇な方におすすめです．",
            "actions": [
              {
                "type": "uri",
                "label": "詳細",
                "uri": "https://liff.line.me/1657210827-WqYZj0Rx"
              }
            ]
          },
          {
            "thumbnailImageUrl": "https://scdn.line-apps.com/n/channel_devcenter/img/fx/01_1_cafe.png",
            "title": "観光地2",
            "text": "こんなスポットは〇〇で，     〇〇な方におすすめです．",
            "actions": [
              {
                "type": "uri",
                "label": "詳細",
                "uri": "https://liff.line.me/1657210827-WqYZj0Rx"
              }
            ]
          },
          {
            "thumbnailImageUrl": "https://scdn.line-apps.com/n/channel_devcenter/img/fx/01_1_cafe.png",
            "title": "観光地3",
            "text": "こんなスポットは〇〇で，     〇〇な方におすすめです．",
            "actions": [
              {
                "type": "uri",
                "label": "詳細",
                "uri": "https://liff.line.me/1657210827-WqYZj0Rx"
              }
            ]
          }
        ]
      }
    }


  ]

  postData = {
    "messages": kankochi
  };

  let testmodel = JSON.stringify(postData)
  console.log(testmodel)

}

function myFunction(agesnum, numbersnum, colorsnum) {

  let list = [];
  //データセット 観光地のベクトルを設定
  const teradomari = [1, 2, 2]
  const kokueipark = [1, 3, 4]
  const sauna = [2, 1, 3]
  const museum = [3, 2, 1]
  const settapark = [4, 2, 2]


  //宣言 
  let SHEET_NAME_DETAIL = 'shousai'
  let sheet_detail = SpreadsheetApp.openById(SHEET_ID).getSheetByName(SHEET_NAME_DETAIL);



  let personality = [agesnum, numbersnum, colorsnum]


  let sum = 0;
  let sum2 = 0;
  let sum3 = 0;

  const place = [teradomari, kokueipark, sauna, museum, settapark]
  const str_place = ["1", "2", "3", "4", "5"]

  for (let j = 0; j < place.length; j++) {

    //kekkaのノルム
    for (let i = 0; i < 3; i++) {
      let kekka2 = [personality[0] ** 2, personality[1] ** 2, personality[2] ** 2]
      sum += kekka2[i];
    }



    const kekkanolm = Math.pow(sum, 0.5);

    //placeのノルム 各配列要素を2乗にしている mapメソッド各配列を指定
    const map1 = place[j].map(x => x ** 2);

    for (let i = 0; i < map1.length; i++) {
      sum2 += map1[i];
    }

    const resultnolm = Math.pow(sum2, 0.5);


    //cos類似度(分子)
    let cos = [personality[0] * place[j][0], personality[1] * place[j][1], personality[2] * place[j][2]]

    for (let i = 0; i < cos.length; i++) {
      sum3 += cos[i];
    }

    const bunshi = sum3


    let ruijido = bunshi / (kekkanolm * resultnolm)

    list.push(ruijido)

    //console.log(`${place[j]}の類似度:${ruijido}`);


  }

  let spot = [[list[0], str_place[0]], [list[1], str_place[1]], [list[2], str_place[2]], [list[3], str_place[3]], [list[4], str_place[4]]]



  let m1 = 0
  let max1_i
  let max2_i
  let max3_i
  let m2 = 0
  let m3 = 0

  for (let i = 0; i < place.length; i++) {
    if (spot[i][0] > m1) {
      m1 = spot[i][0];
      max1_i = i;
    } else if (spot[i][0] > m2) {
      m2 = spot[i][0];
      max2_i = i;
    } else if (spot[i][0] > m3) {
      m3 = spot[i][0];
      max3_i = i;
    }
  }



  for (let i = 2; i < place.length + 2; i++) {
    if (spot[max1_i][1] == sheet_detail.getRange(`A${i}`).getValue()) {
      land = sheet_detail.getRange(`B${i}`).getValue()
      detail = sheet_detail.getRange(`C${i}`).getValue()
      imageurl = sheet_detail.getRange(`D${i}`).getValue()
      detaillink = sheet_detail.getRange(`E${i}`).getValue()
    } else if (spot[max2_i][1] == sheet_detail.getRange(`A${i}`).getValue()) {
      land2 = sheet_detail.getRange(`B${i}`).getValue()
      detail2 = sheet_detail.getRange(`C${i}`).getValue()
      imageurl2 = sheet_detail.getRange(`D${i}`).getValue()
      detaillink2 = sheet_detail.getRange(`E${i}`).getValue()
    } else {
      land3 = sheet_detail.getRange(`B${i}`).getValue()
      detail3 = sheet_detail.getRange(`C${i}`).getValue()
      imageurl3 = sheet_detail.getRange(`D${i}`).getValue()
      detaillink3 = sheet_detail.getRange(`E${i}`).getValue()
    }



    resultkanko = [land, detail, imageurl, detaillink]

    return (resultkanko)






    // console.log("1番類似度の高い観光地" + spot[max1_i][1])
    // console.log("2番類似度の高い観光地" + spot[max2_i][1])
    // console.log("3番類似度の高い観光地" + spot[max3_i][1])

  }
}
